@model IEnumerable<AzureFileUploadWeb.Models.BlobItem>
@using GridMvc.Html

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/jquery-1.10.2.min.js")"></script>
    <script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>
    <title>Index</title>
</head>
<body>
    <div style="margin:50px">
        <p><a href="@Url.Action("IndexJs")">jQuery.Form 사용</a></p>

        @using (Html.BeginForm("UploadFiles", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <table>
                <tr>
                    <td>
                        <input type="file" name="files" multiple />
                        <input type="file" name="files" multiple />
                    </td>
                    <td>
                        <input type="submit" value="Upload" />
                    </td>
                </tr>
            </table>
        }

        <h1>Upload files to Azure Storage via ASP.NET MVC</h1>
        <div style="">
            @Html.Grid(Model).Columns(columns =>
           {
               columns.Add(c => c.Name).Titled("이름").SetWidth(150);
               columns.Add(c => c.Type).Titled("형식");
               columns.Add(c => c.Size).Titled("크기");
               columns.Add(c => c.URL).Titled("URL").Encoded(false).RenderValueAs(c => CustomRenderingOfColumn(c.URL.ToString()).ToHtmlString());
           }).WithPaging(10).Sortable(true)
        </div>

        @helper CustomRenderingOfColumn(string url)
        {
        <a href="@url">@url</a>
}




    </div>
</body>

</html>

